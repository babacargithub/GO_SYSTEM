<?php

namespace GO\CaravaneBundle\Entity;
use GO\ShopBundle\Utils\Constants as Cons;
use Symfony\Component\Debug\Exception\FatalErrorException;

use Doctrine\ORM\EntityRepository;

/**
 * ChargeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChargeRepository extends EntityRepository
{
    const CHARGE_FIXE=true;
    const CHARGE_VARIABLE=false;
    public function getListeCharge(Shop $shop,$typeCharge,$condition)
    {
        //on doit d'abor vérifier le type de charge renseigné, sinon on risque d'avoir des résultats incohérents
        if($typeCharge!=self::CHARGE_FIXE&&$typeCharge!=self::CHARGE_VARIABLE)
        {
            throw  new FatalErrorException('Erreur: Type de dépense inconnu');
        }
         switch($condition)
        {
            case Cons::AUJOURDHUI: $qb->where('DATE(s.date)=CURRENT_DATE()');
                break;
            case Cons::MOIS: $qb->where('MONTH(s.date)=MONTH(CURRENT_DATE()) AND YEAR(s.date)=YEAR(CURRENT_DATE())');
                break;
            case Cons::DATE_INTERVALLE: 
                if(!is_null($date_debut))
                {
                    $qb->where('DATE(s.date)>=:date_debut');
                    $qb->setParameter('date_debut', $date_debut);
                    if(!is_null($date_fin))
                    {
                        $qb->andWhere('DATE(s.date)<=:date_fin');
                        $qb->setParameter('date_fin', $date_fin);
                    }
                }else
                {
                    throw new \RuntimeException('Aucune date entrée ou format date invalide!');
                }
                break;
        }
        
    }
    
}
