<?php

namespace GO\ShopBundle\Entity;

use Doctrine\ORM\EntityRepository;
use GO\ShopBundle\Entity\CreanceLiquide;

/**
 * CreanceLiquideRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CreanceLiquideRepository extends EntityRepository
{
    public function getCreancesNonRemb(Shop $shop, $dateDebut=null)
    {
        $qb=$this->createQueryBuilder('c');
        $qb->where('c.rembourse=:bool');
        $qb->setParameter('bool', false);
        $qb->andWhere('c.shop=:shop');
        $qb->setParameter('shop', $shop);
        $qb->andWhere('c.dateCreance>=:dateDebut');
        $qb->setParameter('dateDebut', $dateDebut);
        return $qb->getQuery()->getResult();
    }
    public function getTotalCreance(Shop $shop,array $options=array())
    {
        $qb=$this->createQueryBuilder('c');
        $qb->select('SUM(c.montant)')
        ->where('c.rembourse=:bool')
        ->setParameter('bool', CreanceLiquide::CREANCE_NON_REMBOURSE)
        ->andWhere('c.shop=:shop')
        ->setParameter('shop', $shop);
        
        //filtering functions
        if(isset($options['dateDebut']))
        {
        $qb->andWhere('c.dateCreance>=:dateDebut');
        $qb->setParameter('dateDebut', $options['dateDebut']);
            if(isset($options['dateFin']))
            {
            $qb->andWhere('c.dateCreance<=:dateFin');
            $qb->setParameter('dateFin', $options['dateFin']);

            }
        
        }
        return $qb->getQuery()->getSingleScalarResult();
    }
}
